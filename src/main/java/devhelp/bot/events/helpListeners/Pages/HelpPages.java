package devhelp.bot.events.helpListeners.Pages;

import java.util.HashMap;
import java.util.Map;

import devhelp.bot.config.util.Colors;
import devhelp.bot.config.util.EmbedTemplate;
import devhelp.bot.events.helpListeners.HelpInteractionListener;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.MessageEmbed;
import net.dv8tion.jda.api.events.interaction.component.StringSelectInteractionEvent;
import net.dv8tion.jda.api.interactions.components.ActionRow;
import net.dv8tion.jda.api.interactions.components.selections.SelectOption;
import net.dv8tion.jda.api.interactions.components.selections.StringSelectMenu;

public class HelpPages {
  private static final Map<String, MessageEmbed> pages = new HashMap<>();
  private static String choice = new HelpInteractionListener().getChoice();

  static {
    pages.put("menu", new EmbedTemplate().embedInfo(null,
        """
              ## üìñ Central de Ajuda ‚Äì Star Code
              Bem-vindo √† central de ajuda do Star Code!
              Aqui voc√™ encontra todos os comandos dispon√≠veis para explorar, aprender e se divertir na comunidade.

              **‚ú® Categorias de comandos:**

              **üìö Estudos**
              Comandos voltados para aprendizado e pr√°tica de programa√ß√£o.

              **üïπÔ∏è Divers√£o**
              Comandos interativos para relaxar e se conectar com a comunidade.

              **üßë‚Äçüíª Iniciante**
              Recursos e atalhos para quem est√° come√ßando na jornada dev.

              **üéØ Utilidades**
              Ferramentas √∫teis para facilitar seu dia a dia como desenvolvedor.
            """, "Selecione uma categoria para ver os comandos dispon√≠veis."));
    pages.put("Estudos", new EmbedTemplate().embedInfo(null,
        """
            # üìö Comandos de Estudos
            > Aqui est√£o os comandos para estudos:
            ``/exercise`` - Comando para gerar exerc√≠cios de programa√ß√£o!
            """, null));
    pages.put("Divers√£o", new EmbedTemplate().embedInfo(null,
        """
            # üìö Comandos de Divers√£o
            > Aqui est√£o os comandos para divers√£o:
            ``/memes`` - Comando para gerar memes aleat√≥rio de programa√ß√£o!
            ``/coinflip`` - Comando para girar a moeda!
            """, null));
    pages.put("Iniciante", new EmbedTemplate().embedInfo(null,
        """
            # üìö Comandos para Iniciante
            > Aqui est√£o os comandos para iniciante:
            ``/languages`` - Comando para exibir informa√ß√µes sobre linguagens de programa√ß√£o!
            ``/roadmap`` - Comando para exibir roadmaps de aprendizado!
            ``/git`` - Comando para exibir comandos git!
            """, null));
  }

  public static MessageEmbed getPage(String key) {
    return pages.getOrDefault(key, errorPage());
  }

  private static MessageEmbed errorPage() {
    return new EmbedTemplate().embedError("‚ùå Erro", "Op√ß√£o inv√°lida!", null);
  }

  public static StringSelectMenu getSelectHelpMenu(String selected) {
    return StringSelectMenu.create("command-menu")
        .addOptions(
          SelectOption.of("Estudos üìö", "Estudos")
            .withDescription("Acesse comandos voltados para aprendizado")
            .withDefault("Estudos".equals(selected)),
          SelectOption.of("Divers√£o üïπÔ∏è", "Divers√£o")
            .withDescription("Descubra comandos para se divertir")
            .withDefault("Divers√£o".equals(selected)),
          SelectOption.of("Iniciante üë®‚Äçüíª", "Iniciante")
            .withDescription("Obtenha orienta√ß√µes para come√ßar na programa√ß√£o")
            .withDefault("Iniciante".equals(selected)),
          SelectOption.of("Menu üíæ", "Menu")
            .withDescription("Volte ao menu principal")
            .withDefault("Menu".equals(selected))
        ).build();
  }

  public static void optionsHelp(StringSelectInteractionEvent event){
        switch (event.getValues().get(0)) {
      case "Estudos" -> event.editMessageEmbeds(
        getPage("Estudos")
      ).setComponents(
        ActionRow.of(
          getSelectHelpMenu(choice)
        ),
        ActionRow.of(
          StudyPages.getSelectStudyMenu()
        )
      ).queue();
      case "Divers√£o" -> event.editMessageEmbeds(getPage("Divers√£o")).setComponents(
        ActionRow.of(
          getSelectHelpMenu(choice)
        ),
        ActionRow.of(
          FunPages.getSelectFunMenu(choice)
        )
      ).queue();
      case "Iniciante" -> event.editMessageEmbeds(getPage("Iniciante")).setComponents(
          ActionRow.of(
            getSelectHelpMenu(choice)
          ),
          ActionRow.of(
            BeginnerPages.getSelectBeginnerMenu()
          )
      ).queue();
      case "Menu" -> event.editMessageEmbeds(
          HelpPages.getPage("menu")
      ).setComponents(
        ActionRow.of(
          HelpPages.getSelectHelpMenu(choice)
        )
      ).queue();
      default -> event.editMessageEmbeds(new EmbedBuilder()
          .setTitle("Erro")
          .setDescription("Op√ß√£o inv√°lida!")
          .setColor(Colors.getError())
          .build()).queue();
    }
  }
}
